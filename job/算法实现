#include <stdlib.h>
#include <stdio.h>
#include <stdint.h>

/*
*二叉查找算法
*/
int binary_search(int *array, int data, int len)
{
	int left = 0;
	int right = len - 1;
	int mid;
	while(left <= right)
	{
		mid = (right + left) / 2;
		if (data < array[mid])
		{
			right = mid - 1;
		}
		else if (data > array[mid])
		{
			left = mid + 1;
		}
		else
		{
			return mid;
		}
	}
	return -1;
}
7大经典排序
一.交换排序
1.冒泡排序
2.快速排序
二.插入排序
1.直接插入排序
2.希尔(shell)排序
三.选择排序
1.直接选择排序
2.堆(Heap)排序
四.归并排序

/*
* 冒泡排序
* 每次相邻两个数比较,若升序,则将大的数放到后面,一次循环过后，就会将最大的数放在最后.
* 如图9 3 2 5 8 4 7 6是输入的待排序的数列,经过第一次排序,将最大的9放在最后,
* 第二次排序,将剩下的2 3 5 4 7 6 8进行冒泡,将当前最大的8放在倒数第二的位置,以此类推
*/
int * bubble_sort(int data[], int len)
{
	int tmp;
	int i,j,k;
	for(j=len-1; j>=0; j--)
	{
		for(i=0; i<j; i++)
		{
			if(data[i] > data[i+1])
			{
				tmp = data[i+1];
				data[i+1] = data[i];
				data[i] = tmp;
			}
		}
	}
	return data;
}
